/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    boolean c = true;
    void perm(TreeNode p, TreeNode q){
        if(p.left != null){
            if(q.left != null){
                if(p.left.val == q.left.val) perm(p.left, q.left);
                else{
                    c = false;
                    return;
                } 
            }else{
                c = false;
                return;
            }
        }else if(q.left != null){
            c = false;
            return;
        }
        if(p.right != null){
            if(q.right != null){
                if(p.right.val == q.right.val) perm(p.right, q.right);
                else{
                    c = false;
                    return;
                } 
            }else{
                c = false;
                return;
            }
        }else if(q.right != null){
            c = false;
            return;
        }
        return;
    }
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p == null){
            if(q == null) return true;
            else return false;
        }
        if(q == null){
            if(p == null) return true;
            else return false;
        }
        if(p.val == q.val) perm(p, q);
        else return false;
        return c;
    }
}
