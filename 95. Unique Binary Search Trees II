/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<TreeNode> generateTrees(int n) {
        return subT(1, n);
    }

     public List<TreeNode> subT(int s, int e){
        List<TreeNode> list =  new LinkedList<>();
        if(s > e){
            list.add(null);
            return list;
        }
        for(int i = s; i <= e; i++){
            List<TreeNode> ltT =  subT(s, i-1);
            List<TreeNode> rtT =  subT(i+1, e);
            for(TreeNode ltN : ltT){
                for(TreeNode rtN : rtT){
                    TreeNode node = new TreeNode();
                    node.val = i;
                    node.left = ltN;
                    node.right = rtN;
                    list.add(node);
                }
            }
        }
        return list;
     }
}
