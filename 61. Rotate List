/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null) return head;
        int c = 1;
        ListNode t = head;
        // ListNode h = new ListNode();
        // h.next = head
        while(t.next != null){
            c++;
            t = t.next;
        }
        //System.out.println(c);
        t = head;
        ListNode t1 = head;
        int n = k%c;
        //System.out.println(n);
        if(n == 0) return head;
        for(int i = 0; i < n; i++){
            t = t.next;
        }
        while(t.next != null){
            t = t.next;
            t1 = t1.next;
        }
        t.next = head;
        t = t1.next;
        t1.next = null;
        return t;
    }
}
