/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    // void rev(ListNode l, ListNode r, int k){

    // }
    public ListNode reverseKGroup(ListNode head, int k) {
        if(k == 1) return head;
        ListNode h = new ListNode();
        h.next = head;
        int n = 1;
        //ListNode t = head;
        ListNode l = h;
        ListNode r = head;
        while(r.next != null){
            n++;
            r = r.next;
        }
        r = head;
        for(int i = 0; i < n/k; i++){
            for(int j = 1; j < k; j++){
                ListNode t = r.next;
                r.next = r.next.next;
                t.next = l.next;
                l.next = t;
            }
            l = r;
            r = r.next;
        }
        return h.next;
    }
}
