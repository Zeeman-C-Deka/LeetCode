/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode r = new ListNode();
        ListNode t = r;
        int c = 0;
        t.val = (l1.val + l2.val + c)%10;
        c = (l1.val + l2.val + c)/10;
        l1 = l1.next;
        l2 = l2.next;
        while(l1 != null && l2 != null){
            t.next = new ListNode();
            t = t.next;
            t.val = (l1.val + l2.val + c)%10;
            c = (l1.val + l2.val + c)/10;
            l1 = l1.next;
            l2 = l2.next;
        }
        if(l1 == null){
            while(l2 != null){
                t.next = new ListNode();
                t = t.next;
                t.val = (l2.val + c)%10;
                c = (l2.val + c)/10;
                l2 = l2.next;
            }
        }else{
            while(l1 != null){
                t.next = new ListNode();
                t = t.next;
                t.val = (l1.val + c)%10;
                c = (l1.val + c)/10;
                l1 = l1.next;
            }
        }
        if(c != 0){
            t.next = new ListNode(1);
            return r;
        }else{
            return r;
        }
    }
}
