/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        if(head == null){
            return null;
        }
        Node h = new Node(head.val);
        Node t1 = head;
        Node t2 = h;
        List<Node> o = new LinkedList<>();
        List<Node> n = new LinkedList<>();
        o.add(t1);
        n.add(t2);
        while(t1.next != null){
            t1 = t1.next;
            t2.next = new Node(t1.val);
            t2 = t2.next;
            o.add(t1);
            n.add(t2);
        }
        o.add(null);
        n.add(null);
        for(int i = 0; i < o.size()-1; i++){
            n.get(i).random = n.get(o.indexOf(o.get(i).random));
        }
        return h;
    }
}
