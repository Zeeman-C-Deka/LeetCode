class Solution {
    public List<Integer> spiralOrder(int[][] mat) {
        List<Integer> l = new ArrayList<Integer>();
        int m = mat.length;
        int n = mat[0].length;
        int i = 0, j = 0, m1 = 0, n1 = 0;
        l.add(mat[i][j]);
        while(i < m && j < n){
            for(++j; j < n-n1; j++){
                l.add(mat[i][j]);
            }
            j--;
            if(l.size() == m*n) break;
            for(++i; i < m-m1; i++){
                l.add(mat[i][j]);
            }
            i--;
            m1++;
            if(l.size() == m*n) break;
            for(--j; j >= n1; j--){
                l.add(mat[i][j]);
            }
            j++;
            n1++;
            if(l.size() == m*n) break;
            for(--i; i >= m1; i--){
                l.add(mat[i][j]);
            }
            i++;
            if(l.size() == m*n) break;
        }
        return l;
    }
}
