class Solution {
    public int minOperations(int[] nums) {
        if(nums.length <= 0) return 0;
        Arrays.sort(nums);
        int n = 1;
        for(int i = 1; i < nums.length; i++){
            if(nums[i] != nums[i-1]){
                nums[n++] = nums[i];
            }
        }

        int min = nums.length;
        for(int i = 0, j = 0; i < n; i++){
            while(j < n && nums[j]-nums[i] <= nums.length-1){
                j++;
            }
            min = Math.min(min, nums.length-(j-i));
        }
        return min;
        // for(int i = 0; i < n; i++){
        //     int f = i;
        //     int l = n;
        //     int c = i;
        //     while(f <= l){
        //         int m = (f+l)/2;
        //         if(nums[m]-nums[i] > n){
        //             c += l-m+1;
        //             l = m-1;
        //         }else if(nums[m]-nums[i] == n){
        //             c += l-m;
        //             l = m-1;
        //         }else{
        //             f = m+1;
        //         }
        //     }
        //     min = Math.min(min, c);
        // }
    }
}
