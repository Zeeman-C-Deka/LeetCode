/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(head.next == null) return head;
        ListNode l = head;
        for(int i = 2; i < left; i++){
            l = l.next;
        }
        boolean c = false;
        if(left == 1){
            c = true;
            ListNode t = new ListNode(head.val, head.next);
            head.next = t;
        }
        ListNode r = l.next;
        for(int i = 0; i < right-left; i++){
            ListNode t = r.next;
            r.next = r.next.next;
            t.next = l.next;
            l.next = t;
        }
        if(c) return head.next;
        return head;
    }
}
