class Solution {
    public List<List<Integer>> pacificAtlantic(int[][] h) {
        List<List<Integer>> list = new ArrayList<>();
        int m = h.length;
        int n = h[0].length;
        boolean dp[][][] =  new boolean[m][n][2];
        for(int i = 0; i < m; i++){
            dp[i][0][0] = true;
            dp[i][n-1][1] = true;
        }
        for(int i = 0; i < n; i++){
            dp[0][i][0] = true;
            dp[m-1][i][1] = true;
        }
        for(int i = 1; i < m; i++){
            for(int j = 1; j < n; j++){
                // System.out.print(h[i][j]+" ");
                if((dp[i-1][j][0] && h[i][j] >= h[i-1][j]) || (dp[i][j-1][0] && h[i][j] >= h[i][j-1])){
                    dp[i][j][0] = true;
                }
                if(dp[i][j][0] && h[i-1][j] >= h[i][j] && !dp[i-1][j][0]){
                        dp[i-1][j][0] = true;
                        i--;
                        j--;
                        continue;
                }
                if(dp[i][j][0] && h[i][j-1] >= h[i][j] && !dp[i][j-1][0]){
                    dp[i][j-1][0] = true;    
                    j -= 2;                        
                }
            }
        }
        for(int i = m-2; i >= 0; i--){
            for(int j = n-2; j >= 0; j--){
                if((dp[i+1][j][1] && h[i][j] >= h[i+1][j]) || (dp[i][j+1][1] && h[i][j] >= h[i][j+1])){
                    dp[i][j][1] = true;
                }
                if(dp[i][j][1] && h[i+1][j] >= h[i][j] && !dp[i+1][j][1]){
                        dp[i+1][j][1] = true;
                        i++;
                        j++;
                        continue;
                }
                if(dp[i][j][1] && h[i][j+1] >= h[i][j] && !dp[i][j+1][1]){
                    dp[i][j+1][1] = true;
                    j += 2;
                }
            }
        }
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(dp[i][j][0] && dp[i][j][1]){
                    List<Integer> l = new ArrayList<>();
                    l.add(i);
                    l.add(j);
                    list.add(l);
                }
            }
        }
        return list;
    }
}
