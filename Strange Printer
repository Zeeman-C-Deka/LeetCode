class Solution {
    public int strangePrinter(String s) {
        int n = s.length();
        int dp[][] = new int[n][n];

        for(int i = n-1; i >= 0; i--){
            dp[i][i] = 1;
            for(int j = i+1; j < n; j++){
                dp[i][j] = dp[i][j-1] + 1;
                for(int k = i; k < j; k++){
                    if(s.charAt(k) == s.charAt(j)){
                        dp[i][j] = Math.min(dp[i][j], dp[i][k] + (k+1 <= j-1 ? dp[k+1][j-1] : 0));
                    }
                }
            }
        }
        return dp[0][n-1];

        // if(s.length() == 1){
        //     return 1;
        // }
        // int n = s.length();
        // char c[] = new char[n];
        // int count = 0;
        // int ii = 0;
        // for(int i = 0; i < n; i++){
        //     if(c[i] == s.charAt(i))
        //         continue;
        //     ii = 0;
        //     count++;
        //     c[i] = s.charAt(i);
        //     for(int j = i+1; j < n; j++){
        //         if(c[j] != (char)0 && ii == 0)
        //             ii++;
        //         if(s.charAt(j) == c[i]){
        //             c[j] = c[i];
        //             if(ii == 1){
        //                 count++;
        //             }
        //             ii = 0;
        //         }
        //     }
        // }
        // return count;
    }
}
