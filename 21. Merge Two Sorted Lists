/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        // ListNode r = new ListNode();
        // ListNode t = new ListNode();
        // r.next = t;
        // while(l1 != null && l2 != null){
        //     if(l1.val <= l2.val){
        //         t.next = new ListNode(l1.val);
        //         l1 = l1.next;
        //         t = t.next;
        //     }else{
        //         t.next = new ListNode(l2.val);
        //         l2 = l2.next;
        //         t = t.next;
        //     }
        // }
        // if(l1 == null){
        //     t.next = l2;
        //     return r.next.next;
        // }else{
        //     t.next = l1;
        //     return r.next.next;
        // }
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        if(l1.val <= l2.val){
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
        }else{
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
        }
    }
}
