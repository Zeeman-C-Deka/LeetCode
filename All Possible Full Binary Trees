/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public List<TreeNode> allPossibleFBT(int n) {
        List<TreeNode> tree = new ArrayList<TreeNode>();
        if(n == 1){
            tree.add(new TreeNode());
            return tree;
        }

        for(int i = 1; i < n; i += 2){
            List<TreeNode> left = allPossibleFBT(i);
            List<TreeNode> right = allPossibleFBT(n-i-1);
            for(TreeNode l : left){
                for(TreeNode r : right){
                    TreeNode root = new TreeNode();
                    root.left = l;
                    root.right = r;
                    tree.add(root);
                }
            }
        }
        return tree;
    }
}
